import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [backendStatus, setBackendStatus] = useState('–ü—Ä–æ–≤–µ—Ä–∫–∞...');
  const [betResult, setBetResult] = useState(null);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ backend –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    checkBackend();
  }, []);

  const checkBackend = async () => {
    try {
      const response = await fetch('http://localhost:8000/health');
      if (response.ok) {
        const data = await response.json();
        setBackendStatus(`‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç! –í–µ—Ä—Å–∏—è: ${data.version}`);
      } else {
        setBackendStatus('‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    } catch (error) {
      setBackendStatus('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ backend');
    }
  };

  const testBet = async () => {
    try {
      const response = await fetch('http://localhost:8000/bet/prepare', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          number: 7,
          amount: 0.1,
          player_address: '0x1234567890123456789012345678901234567890'
        })
      });
      
      if (response.ok) {
        const data = await response.json();
        setBetResult('‚úÖ –°—Ç–∞–≤–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞! ZK-proof —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω');
      } else {
        setBetResult('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Å—Ç–∞–≤–∫–∏');
      }
    } catch (error) {
      setBetResult('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API');
    }
  };

  return (
    <div className="App">
      <header className="App-header">
        <h1>üé∞ ZK-Roulette v2.0</h1>
        <p>–ë–ª–æ–∫—á–µ–π–Ω —Ä—É–ª–µ—Ç–∫–∞ —Å Zero-Knowledge Proof</p>
        
        <div className="status-panel">
          <h2>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</h2>
          <p>{backendStatus}</p>
          <button onClick={checkBackend}>–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å</button>
        </div>

        <div className="test-panel">
          <h2>–¢–µ—Å—Ç API:</h2>
          <button onClick={testBet}>–¢–µ—Å—Ç —Å—Ç–∞–≤–∫–∏ (—á–∏—Å–ª–æ 7, 0.1 ETH)</button>
          {betResult && <p>{betResult}</p>}
        </div>

        <div className="info-panel">
          <h2>üî• –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h2>
          <ul>
            <li>üîí Zero-Knowledge Proof - –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏</li>
            <li>ü§ñ –ò–ò-–∞–Ω–∞–ª–∏–∑ - –î–µ—Ç–µ–∫—Ü–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞</li>
            <li>‚ö° Real-time - –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</li>
            <li>üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∑–∞—â–∏—Ç–∞</li>
          </ul>
        </div>

        <div className="links-panel">
          <h2>üìö –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</h2>
          <a href="http://localhost:8000/docs" target="_blank" rel="noopener noreferrer">
            üìñ API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          </a>
          <br />
          <a href="http://localhost:8000/health" target="_blank" rel="noopener noreferrer">
            ‚ù§Ô∏è Health Check
          </a>
        </div>
      </header>
    </div>
  );
}

export default App; 